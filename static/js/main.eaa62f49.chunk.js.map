{"version":3,"sources":["components/MovieCard.js","context/context.js","components/MovieSearch.js","views/MovieHome.js","components/MovieDetailsInfo.js","components/MovieDetailsOverview.js","components/MovieDetailsPoster.js","components/MovieDetailsReview.js","components/MovieDetailsTag.js","components/MovieDetailsTrailer.js","views/MovieDetails.js","views/About.js","views/Login.js","views/MovieStats.js","shared/NavBar.js","shared/PrivateRoute.js","App.js","serviceWorker.js","firebase.js","axios.js","context/movie/movieReducer.js","context/actionTypes.js","context/movie/movieState.js","context/auth/authReducer.js","context/auth/authState.js","index.js"],"names":["movieCard","React","memo","text","movie","to","id","className","src","poster_path","alt","title","vote_average","release_date","overview","length","substr","MovieContext","createContext","AuthContext","MovieSearch","useState","searchText","setSearchText","context","useContext","type","placeholder","onChange","e","target","value","onClick","searchMovie","filterMovies","MovieHome","props","movieContext","currentPage","movies","getMovies","useEffect","map","key","MovieDetailsInfo","heading","subheading","isLink","href","rel","MovieDetailsOverview","aria-hidden","MovieDetailsPoster","posterPath","posterSize","class","small","medium","MovieDetailsReview","review","author","content","MovieDetailsTag","tagName","tagValue","MovieDetailsTrailer","video","width","height","allowfullscreen","MovieDetails","movieId","match","params","movieDetails","movieReviews","getMovieDetails","getMovieReviews","videos","tags","extraInfo","data-aos","Object","keys","info","About","notes","Login","emailRef","useRef","passwordRef","onSubmit","preventDefault","email","current","password","user","location","state","signup","then","history","push","pathname","login","htmlFor","name","ref","gridDefs","headerName","lockPosition","valueGetter","node","rowIndex","cellClass","suppressNavigable","field","sortable","filter","MovieStats","getMoviesTopRated","moviesToprated","gridColumnDefs","filters","release_year","undefined","movieCountByYear","countByYearBarOptions","countByYearPieOptions","movieStats","setMovieStats","movieCountByRate","_","chain","countBy","count","rate","y","movieCountByYear2","pieOptions","chart","plotBackgroundColor","plotBorderWidth","plotShadow","subtitle","tooltip","pointFormat","plotOptions","series","cursor","point","events","click","this","colorByPoint","data","createCountByRatePieOptions","barOptions","xAxis","categories","crosshair","yAxis","min","headerFormat","footerFormat","shared","useHTML","column","pointPadding","borderWidth","values","newFilters","filteredMovies","pickBy","v","isString","isNumber","highcharts","Highcharts","options","newfilters","reduce","result","k","style","columnDefs","rowData","modules","AllCommunityModules","NavBar","currentDate","Date","toLocaleDateString","role","aria-label","logout","PrivateRoute","Component","component","rest","authContext","render","App","routes","exact","path","fallback","Boolean","window","hostname","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","auth","myAxios","axios","create","baseURL","timeout","interceptors","request","use","config","console","log","url","error","Promise","reject","movieUrls","page","query","movieid","imdbid","action","concat","payload","originalMovies","MovieState","useReducer","MovieReducer","dispatch","a","get","res","results","response","site","country","production_countries","join","boxOffice","budget","revenue","TagLine","tagline","Released","Runtime","runtime","Genres","genres","imdb_id","reviews","movieAxios","num","all","r1","r2","r3","r4","r5","flatMap","Provider","filterText","m","toLowerCase","includes","children","AuthState","initialState","currentUser","AuthReducer","setUser","createUserWithEmailAndPassword","catch","err","message","signInWithEmailAndPassword","signOut","onAuthStateChanged","app","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.eaa62f49.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./MovieCard.css\";\n\nconst basePosterUrl = \"http://image.tmdb.org/t/p/w185/\";\n\nconst movieCard = React.memo(({ movie }) => {\n\n  const truncate = text => {\n    return text.length > 50 ? text.substr(0, 50) + '...' : text;\n  }\n\n  return (\n    <Link to={`/movie/${movie.id}`}>\n      <div>\n        <div className=\"card column\">\n          <div className=\"card-image\">\n            <figure className=\"image is-6by3\">\n              <img src={basePosterUrl + movie.poster_path} alt=\"poster\" />\n            </figure>\n          </div>\n          <div className=\"card-content\">\n            <div className=\"media\">\n              <div className=\"media-content\">\n                <div className=\"title is-5\">\n                  <span>{movie.title}</span>\n                  <div className=\"tag has-addon\">\n                    <span className=\"tag is-info\">{movie.vote_average}</span>\n                    <span className=\"tag\">{movie.release_date}</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"content\">{truncate(movie.overview)}</div>\n          </div>\n        </div>\n      </div>\n    </Link>\n  );\n});\n\nexport default movieCard;\n","import { createContext } from \"react\";\n\nconst MovieContext = createContext();\nconst AuthContext = createContext();\n\nexport { MovieContext, AuthContext };\n","import React, { useState, useContext } from \"react\";\nimport { MovieContext } from \"../context/context\";\n\nconst MovieSearch = () => {\n  const [searchText, setSearchText] = useState(\"\");\n  const context = useContext(MovieContext);\n\n  const updateSearchText = e => {\n    setSearchText(e.target.value);\n  };\n\n  const searchMovie = () => {\n    context.searchMovie(searchText);\n  };\n\n  const filterMovies = (e) => {\n    context.filterMovies(e.target.value);\n  }\n\n  return (\n    <div className=\"columns\">\n      <div className=\"column is-8\">\n        <div className=\"field has-addons\">\n          <div className=\"control is-expanded\">\n            <input\n              className=\"input has-text-centered\"\n              type=\"search\"\n              placeholder=\"Search movies...\"\n              onChange={updateSearchText}\n            />\n          </div>\n          <div className=\"control\">\n            <div className=\"button is-primary\" onClick={searchMovie}>\n              Search\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"column is-4\">\n        <div className=\"field has-addons\">\n          <div className=\"control is-expanded\">\n            <input className=\"input\" type=\"search\" placeholder=\"Filter Movie\" onChange={filterMovies}/>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieSearch;\n","import React, { useContext, useEffect } from \"react\";\nimport MovieCard from \"../components/MovieCard\";\nimport MovieSearch from \"../components/MovieSearch\";\nimport { MovieContext } from \"../context/context\";\n\nconst MovieHome = (props) => {\n\n  const movieContext = useContext(MovieContext);\n  const { currentPage, movies, getMovies } = movieContext;\n\n  const showLoadMore = true;\n\n  const loadMoreMovies = () => {\n    getMovies(currentPage + 1);\n  };\n\n  useEffect(() => {\n    getMovies();\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <MovieSearch />\n\n      <div className=\"columns features is-multiline\">\n        {movies.map(movie => (\n          <MovieCard key={movie.id} movie={movie} />\n        ))}\n      </div>\n\n      {showLoadMore && (\n        <div className=\"container box has-text-centered\">\n          <div className=\"button is-primary\" onClick={loadMoreMovies}>\n            Load More\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MovieHome;\n","import React from \"react\";\n\nconst MovieDetailsInfo = ({ heading, subheading, isLink }) => {\n  return (\n    <div className=\"column\">\n      <p className=\"heading\">\n        {isLink && (\n          <strong>\n            <a href={heading} target=\"_blank\" rel=\"noopener noreferrer\">\n              IMDB Link\n            </a>\n          </strong>\n        )}\n        {!isLink && <strong>{heading}</strong>}\n      </p>\n\n      <p className=\"subheading\">{subheading}</p>\n    </div>\n  );\n};\n\nexport default MovieDetailsInfo;\n","import React from 'react';\n\nconst MovieDetailsOverview = ({overview}) => {\n    return (\n        <nav className=\"panel\">\n        <p className=\"panel-heading\">\n          Overview\n        </p>\n        <div className=\"panel-block is-active\">\n          <span className=\"panel-icon\">\n            <i className=\"fas fa-book\" aria-hidden=\"true\"></i>\n          </span>\n          { overview }\n        </div>\n      </nav>\n    )\n}\n\nexport default MovieDetailsOverview;\n\n","import React from \"react\";\n\nconst MovieDetailsPoster = ({ posterPath, posterSize }) => {\n  const basePosterUrl = {\n    small: `http://image.tmdb.org/t/p/w185/`,\n    medium: `http://image.tmdb.org/t/p/w500/`\n  };\n\n  return (\n    <div class=\"column\">\n      <img src={basePosterUrl[posterSize] + posterPath} alt=\"poster\" />\n    </div>\n  );\n};\n\nexport default MovieDetailsPoster;\n","import React from 'react'\n\nconst MovieDetailsReview = ({review}) => {\n    return (\n        <div>\n        <p class=\"has-text-info\">Author: { review.author }</p>\n            <p>\n              { review.content }\n            </p>\n      </div>\n    );\n};\n\nexport default MovieDetailsReview;","import React from \"react\";\n\nconst MovieDetailsTag = ({ tagName, tagValue }) => {\n  return (\n    <p className=\"is-larger\">\n      <span className=\"tag is-info column is-1\"> {tagName} </span>\n      <strong>&nbsp; {tagValue}</strong>\n    </p>\n  );\n};\n\nexport default MovieDetailsTag;\n","import React from \"react\";\n\nconst MovieDetailsTrailer = ({ video }) => {\n  const baseYoutubeUrl = `https://www.youtube.com/embed/`;\n  return (\n    <div className=\"column\">\n      <iframe\n        width=\"100%\"\n        height=\"auto\"\n        src={baseYoutubeUrl + video.key}\n        allowfullscreen\n        title={video.id}\n      ></iframe>\n    </div>\n  );\n};\n\nexport default MovieDetailsTrailer;\n","import React, { useEffect, useContext } from \"react\";\nimport { MovieContext } from \"../context/context\";\nimport MovieDetailsInfo from \"../components/MovieDetailsInfo\";\nimport MovieDetailsOverview from \"../components/MovieDetailsOverview\";\nimport MovieDetailsPoster from \"../components/MovieDetailsPoster\";\nimport MovieDetailsReview from \"../components/MovieDetailsReview\";\nimport MovieDetailsTag from \"../components/MovieDetailsTag\";\nimport MovieDetailsTrailer from \"../components/MovieDetailsTrailer\";\n\nconst MovieDetails = props => {\n  const movieContext = useContext(MovieContext);\n  const movieId = props.match.params.movieId;\n  const {\n    movieDetails,\n    movieReviews,\n    getMovieDetails,\n    getMovieReviews\n  } = movieContext;\n  const { movie, videos, tags, extraInfo } = movieDetails;\n\n  useEffect(() => {\n    getMovieDetails(movieId);\n    getMovieReviews(movieId);\n  }, []);\n\n  return (\n    <div>\n      <div className=\"hero\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <div className=\"box has-background-grey-light\">\n              <h1 className=\"title is-1 has-text-centered\">\n                {movie.title}\n                <span className=\"tag is-success\">{movie.vote_average}</span>\n              </h1>\n            </div>\n            <div className=\"columns is-multiline\">\n              <MovieDetailsPoster\n                posterPath={movie.poster_path}\n                posterSize=\"medium\"\n              />\n\n              <div\n                className=\"column is-7 has-vertically-aligned-content\"\n                data-aos=\"fade-right\"\n              >\n                <MovieDetailsOverview overview={movie.overview} />\n\n                {Object.keys(tags).map(tagName => {\n                  return (\n                    <MovieDetailsTag\n                      key={tagName}\n                      tagName={tagName}\n                      tagValue={tags[tagName]}\n                    />\n                  );\n                })}\n\n                <br />\n\n                <div className=\"columns about-links\">\n                  {extraInfo.map(info => {\n                    return (\n                      <MovieDetailsInfo\n                        className=\"column about-links\"\n                        key={info.heading}\n                        heading={info.heading}\n                        subheading={info.subheading}\n                        isLink={info.isLink}\n                      />\n                    );\n                  })}\n                </div>\n\n                <div className=\"columns\">\n                  {videos.map(video => (\n                    <MovieDetailsTrailer key={video.id} video={video} />\n                  ))}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"container\">\n        <h1 className=\"title is-2\">Reviews</h1>\n        {movieReviews.map(review => {\n          return <MovieDetailsReview review={review} />;\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import React from \"react\";\n\nconst About = () => {\n  const notes = {\n    1: `Every year since 2008, the number of contributions to our database has increased. With over 200,000 developers and companies using our platform, TMDb has become a premiere source for metadata.`,\n    2: `Along with extensive metadata for movies, TV shows and people, we also offer one of the best selections of high resolution posters and fanart. On average, over 1,000 images are added every single day.`,\n    3: `We're international. While we officially support 39 languages we also have extensive regional data. Every single day TMDb is used in over 180 countries.`,\n    4: `Our community is second to none. Between our staff and community moderators, we're always here to help. We're passionate about making sure your experience on TMDb is nothing short of amazing.`,\n    5: `Trusted platform. Every single day our service is used by millions of people while we process over 3 billion requests. We've proven for years that this is a service that can be trusted and relied on.`\n  };\n\n  return (\n    <div className=\"about main-content\">\n      <section className=\"hero\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <div className=\"content\">\n              <h2>Hi there,</h2>\n              <img\n                src=\"https://www.themoviedb.org/assets/2/v4/marketing/deadpool-06f2a06d7a418ec887300397b6861383bf1e3b72f604ddd5f75bce170e81dce9.png\"\n                alt=\"poster\"\n                width=\"902\"\n                height=\"298\"\n              />\n\n              <h3>\n                Let's talk about TMDb (copied from\n                <a href=\"https://www.themoviedb.org/about\">TMDb</a>)\n              </h3>\n              <p>\n                The Movie Database (TMDb) is a <em>community built</em> movie\n                and TV database. Every piece of data has been added by our\n                amazing community dating back to 2008. TMDb's strong\n                <em>international focus</em> and breadth of data is largely\n                unmatched and something we're incredibly proud of. Put simply,\n                we live and breathe community and that's precisely what makes us\n                different.\n              </p>\n\n              <h4>The TMDb Advantage</h4>\n              <div className=\"wrapper\">\n                <div>\n                  <div>1</div>\n                  <p>{notes[1]}</p>\n                </div>\n\n                <div>\n                  <div>2</div>\n                  <p>{notes[2]}</p>\n                </div>\n\n                <div>\n                  <div>3</div>\n                  <p>{notes[3]}</p>\n                </div>\n\n                <div>\n                  <div>4</div>\n                  <p>{notes[4]}</p>\n                </div>\n\n                <div>\n                  <div>5</div>\n                  <p>{notes[5]}</p>\n                </div>\n              </div>\n\n              <button className=\"contact button white\">Contact TMDb</button>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default About;\n","import React, { useContext, useRef } from \"react\";\nimport { AuthContext } from \"../context/context\";\n\nconst Login = props => {\n  const context = useContext(AuthContext);\n  const emailRef = useRef();\n  const passwordRef = useRef();\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const email = emailRef.current.value;\n    const password = passwordRef.current.value;\n    const user = {email: email, password: password};\n\n    if (props.location.state && props.location.state.type === \"signup\") {\n      context.signup(user).then(() => {\n        props.history.push({ pathname: \"/home\", state: { email: email } });\n      });\n    } else {\n      context.login(user).then(() => {\n        props.history.push({ pathname: \"/home\", state: { email: email } });\n      });\n    }\n  };\n\n  const resetForm = () => {\n    emailRef.current.value = '';\n    passwordRef.current.value = '';\n  };\n\n  return (\n    <div className=\"hero-body\">\n      <div className=\"container\">\n        <div className=\"columns is-centered\">\n          <div className=\"column is-8-tablet is-6-desktop is-4-widescreen\">\n            <form onSubmit={onSubmit}>\n              <div className=\"form-group\">\n                <label htmlFor=\"email\">Email:</label>\n                <input\n                  type=\"email\"\n                  name=\"email\"\n                  ref={emailRef}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"password\">Password:</label>\n                <input\n                  type=\"password\"\n                  name=\"password\"\n                  ref={passwordRef}\n                />\n              </div>\n\n              <br />\n\n              <div className=\"buttons\">\n                <span className=\"icon is-small\">\n                  <i className=\"fas fa-check\"></i>\n                </span>\n                <input\n                  type=\"submit\"\n                  className=\"button is-success\"\n                  value={\n                    props.location.state &&\n                    props.location.state.type === \"signup\"\n                      ? \"Sign Up\"\n                      : \"Log In\"\n                  }\n                />\n                <button className=\"button is-warning\" onClick={resetForm}>\n                  <span className=\"icon is-small\">\n                    <i className=\"fas fa-redo\"></i>\n                  </span>\n                  <span>Reset</span>\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport _ from \"lodash\";\nimport { AgGridReact } from \"@ag-grid-community/react\";\nimport { AllCommunityModules } from \"@ag-grid-community/all-modules\";\nimport { MovieContext } from \"../context/context\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\n\nimport \"@ag-grid-community/all-modules/dist/styles/ag-grid.css\";\nimport \"@ag-grid-community/all-modules/dist/styles/ag-theme-balham.css\";\n\nconst gridDefs = [\n  {\n    headerName: \"\",\n    lockPosition: true,\n    valueGetter: params => params.node.rowIndex + 1,\n    cellClass: \"locked-col\",\n    width: 50,\n    suppressNavigable: true\n  },\n  { headerName: \"Title\", field: \"title\", sortable: true, filter: true },\n  {\n    headerName: \"Rate\",\n    field: \"vote_average\",\n    sortable: true,\n    filter: true\n  },\n  {\n    headerName: \"Popularity\",\n    field: \"popularity\",\n    sortable: true,\n    filter: true\n  },\n  {\n    headerName: \"Release Date\",\n    field: \"release_date\",\n    sortable: true,\n    filter: true\n  },\n  {\n    headerName: \"Language\",\n    field: \"original_language\",\n    sortable: true,\n    filter: true\n  }\n];\n\nconst createCountByRatePieOptions = function(filterMovies) {\n  return {\n    chart: {\n      plotBackgroundColor: null,\n      plotBorderWidth: null,\n      plotShadow: false,\n      type: \"pie\"\n    },\n    title: {\n      text: \"Movie Count by Rate\"\n    },\n    subtitle: {\n      text: \"Source: TMDB.com\"\n    },\n    tooltip: {\n      pointFormat: \"{series.name}: <b>{point.percentage:.1f}%</b>\"\n    },\n    plotOptions: {\n      series: {\n        cursor: \"pointer\",\n        point: {\n          events: {\n            click: function() {\n              const filter = { vote_average: +this.name };\n              filterMovies(filter);\n            }\n          }\n        }\n      }\n    },\n    series: [\n      {\n        name: \"Count\",\n        colorByPoint: true,\n        data: []\n      }\n    ]\n  };\n};\n\nconst createCountByYearBarOptions = function() {\n  return {\n    chart: {\n      type: \"column\"\n    },\n    title: {\n      text: \"Movie Count By Year\"\n    },\n    subtitle: {\n      text: \"Source: TMDB.com\"\n    },\n    xAxis: {\n      categories: [],\n      crosshair: true\n    },\n    yAxis: {\n      min: 0,\n      title: {\n        text: \"Count\"\n      }\n    },\n    tooltip: {\n      headerFormat: '<span style=\"font-size:10px\">{point.key}</span><table>',\n      pointFormat:\n        '<tr><td style=\"color:{series.color};padding:0\">{series.name}: </td>' +\n        '<td style=\"padding:0\"><b>{point.y:.f}</b></td></tr>',\n      footerFormat: \"</table>\",\n      shared: true,\n      useHTML: true\n    },\n    plotOptions: {\n      column: {\n        pointPadding: 0.2,\n        borderWidth: 0\n      },\n      series: {\n        cursor: \"pointer\",\n        point: {\n          events: {\n            click: function() {\n              // vm.filters.release_year = this.category;\n            }\n          }\n        }\n      }\n    },\n    series: [\n      {\n        name: \"Count\",\n        data: []\n      }\n    ]\n  };\n};\n\nconst MovieStats = props => {\n  const movieContext = useContext(MovieContext);\n  const { getMoviesTopRated } = movieContext;\n\n  const [movieStats, setMovieStats] = useState({\n    moviesToprated: [],\n    gridColumnDefs: [],\n\n    filters: { release_year: undefined, vote_average: undefined },\n    movieCountByYear: [],\n\n    countByYearBarOptions: {},\n    countByYearPieOptions: {}\n  });\n\n  const {\n    moviesToprated,\n    gridColumnDefs,\n    filters,\n    countByYearBarOptions,\n    countByYearPieOptions\n  } = movieStats;\n\n  useEffect(() => {\n    getMoviesTopRated().then(movies => {\n      //   moviesToprated = _.chain(movies)\n      //     // .orderBy([\"release_date\"], [\"desc\"])\n      //     // .slice(0, 10)\n      //     .value();\n\n      const movieCountByRate = _.chain(movies)\n        .countBy(\"vote_average\")\n        .map((count, rate) => {\n          return {\n            name: rate,\n            y: count\n          };\n        })\n        .value();\n\n      const movieCountByYear2 = _.chain(movies)\n        .countBy(\"release_year\")\n        .value();\n\n      const pieOptions = createCountByRatePieOptions(filterMovies);\n      pieOptions.series[0].data = movieCountByRate;\n\n      const barOptions = createCountByYearBarOptions();\n      barOptions.xAxis.categories = _.keys(movieCountByYear2);\n      barOptions.series[0].data = _.values(movieCountByYear2);\n\n      setMovieStats({\n        ...movieStats,\n        moviesToprated: movies,\n        gridColumnDefs: gridDefs,\n        countByYearPieOptions: pieOptions,\n        countByYearBarOptions: barOptions\n      });\n    });\n  }, []);\n\n  const clearFilters = () => {\n    const newfilters = _.reduce(\n      filters,\n      (result, v, k) => {\n        result[k] = undefined;\n        return result;\n      },\n      {}\n    );\n\n    setMovieStats({\n      ...movieStats,\n      filters: newfilters\n    });\n  };\n\n  const filterMovies = filter => {\n    const newFilters = { ...filters, ...filter };\n\n    const filteredMovies = _.filter(\n      moviesToprated,\n      _.pickBy(filters, v => _.isString(v) || _.isNumber(v))\n    );\n\n    setMovieStats({\n      ...movieStats,\n      moviesToprated: filteredMovies,\n      filters: newFilters\n    });\n  };\n\n  const hasFilter = () => {\n    return _.some(filters, _.isString);\n  };\n\n  return (\n    <div className=\"hero is-fullheight\">\n      <div className=\"hero body\">\n        <div className=\"container\">\n          <div className=\"columns\">\n            <div className=\"column is-6\">\n              <HighchartsReact\n                highcharts={Highcharts}\n                options={countByYearPieOptions}\n              />\n            </div>\n            <div className=\"column is-6\">\n              <HighchartsReact\n                highcharts={Highcharts}\n                options={countByYearBarOptions}\n              />\n            </div>\n          </div>\n\n          <h2 className=\"title is-primary\">\n            Top 100 Rated Movies\n            <button className=\"button is-primary\" onClick={clearFilters}>\n              Clear Filters\n            </button>\n          </h2>\n\n          <div\n            className=\"ag-theme-balham\"\n            style={{\n              height: \"500px\",\n              width: \"1000px\"\n            }}\n          >\n            <AgGridReact\n              columnDefs={gridColumnDefs}\n              rowData={moviesToprated}\n              modules={AllCommunityModules}\n            ></AgGridReact>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieStats;\n","import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { AuthContext } from \"../context/context\";\n\nconst NavBar = (props) => {\n  const context = useContext(AuthContext);\n  const currentDate = new Date().toLocaleDateString();\n\n  const logout = () => {\n    context.logout().then(() => {\n      props.history && props.history.push('/login');\n    })\n  }\n\n  return (\n    <div>\n      <nav\n        className=\"navbar is-dark\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"navbar-brand\">\n          <a className=\"navbar-item\" href=\"https://imdb.com\">\n            <img\n              src=\"https://www.themoviedb.org/assets/2/v4/logos/408x161-powered-by-rectangle-green-bb4301c10ddc749b4e79463811a68afebeae66ef43d17bcfd8ff0e60ded7ce99.png\"\n              alt=\"TMDb Logo\"\n              width=\"112\"\n              height=\"28\"\n            />\n          </a>\n        </div>\n\n        <div id=\"navbarBasicExample\" className=\"navbar-menu\">\n          <div className=\"navbar-start\">\n            <Link className=\"navbar-item\" to=\"/home\">\n              Home\n            </Link>\n            <Link className=\"navbar-item\" to=\"/moviestats\">\n              Stats\n            </Link>\n            <Link className=\"navbar-item\" to=\"/about\">\n              About\n            </Link>\n\n            <div className=\"navbar-item has-dropdown is-hoverable\">\n              <div className=\"navbar-link\">More</div>\n\n              <div className=\"navbar-dropdown\">\n                <Link className=\"navbar-item\" to=\"/about\">\n                  News\n                </Link>\n                <Link className=\"navbar-item\" to=\"/about\">\n                  Help\n                </Link>\n                <hr className=\"navbar-divider\" />\n                <Link className=\"navbar-item\" to=\"/about\">\n                  Report an Issue\n                </Link>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"navbar-end\">\n            <div className=\"navbar-item\">\n              <label className=\"lable\"> {context.email} </label>\n              <label className=\"lable\"> {currentDate} </label>\n              <div className=\"buttons\">\n                {!context.email && (\n                  <Link\n                    className=\"button is-primary\"\n                    to={{ pathname: \"/login\", state: { type: \"signup\" } }}\n                  >\n                    <strong>Sign up</strong>\n                  </Link>\n                )}\n\n                {!context.email && (\n                  <Link className=\"button is-light\" to=\"/login\">\n                    Log in\n                  </Link>\n                )}\n\n                <button className=\"button is-warning\" onClick={logout}>\n                  Sign Out\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </nav>\n    </div>\n  );\n};\n\nexport default NavBar;\n","import React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { AuthContext } from \"../context/context\";\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const authContext = useContext(AuthContext);\n\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        !authContext.email ? <Redirect to=\"/login\" /> : <Component {...props} />\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import React, { Suspense, useContext, useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport \"bulma/css/bulma.css\";\nimport \"./App.css\";\nimport MovieHome from \"./views/MovieHome\";\nimport MovieDetails from \"./views/MovieDetails\";\nimport About from \"./views/About\";\nimport Login from \"./views/Login\";\nimport MovieStats from \"./views/MovieStats\";\nimport NavBar from \"./shared/NavBar\";\nimport PrivateRoute from \"./shared/PrivateRoute\";\n\nfunction App(props) {\n  const routes = (\n    <Switch>\n      <PrivateRoute exact path=\"/home\" component={MovieHome} />\n      {/* <Route path=\"/home\" exact component={MovieHome} /> */}\n      <PrivateRoute path=\"/movie/:movieId\" exact component={MovieDetails} />\n      <PrivateRoute path=\"/moviestats\" exact component={MovieStats} />\n\n      <Route path=\"/about\" exact component={About} />\n      <Route path=\"/login\" exact component={Login} />\n\n      <Route path=\"*\" exact render={props => <h1>Page Not Found</h1>} />\n    </Switch>\n  );\n\n  return (\n    <div className=\"App\">\n      <div>\n        <NavBar id=\"navbar\" />\n        <Suspense fallback={<p>Loading...</p>}>{routes}</Suspense>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import firebase from \"firebase\";\n// import firestore from 'firebase/firestore'\n\n// Initialize Firebase\nvar firebaseConfig = {\n  apiKey: \"AIzaSyCmUAOOE8DDCsslWZCUF_zI6m7Ogfnp9fA\",\n  authDomain: \"vue-demo-7bbda.firebaseapp.com\",\n  databaseURL: \"https://vue-demo-7bbda.firebaseio.com\",\n  projectId: \"vue-demo-7bbda\",\n  storageBucket: \"vue-demo-7bbda.appspot.com\",\n  messagingSenderId: \"1047652131794\",\n  appId: \"1:1047652131794:web:4fb9172df2bc83676b5e0b\"\n};\nfirebase.initializeApp(firebaseConfig);\n\nconst db = firebase.firestore();\nconst auth = firebase.auth();\n\nexport { auth, db };\n","import axios from \"axios\";\n\nconst baseMovieUrl = `https://api.themoviedb.org/3/`;\nconst apiKey = `&api_key=db92a48cc98dd05417a4d990dd1e47aa`;\n\nconst myAxios = axios.create({\n  baseURL: baseMovieUrl,\n  timeout: 1000\n  // headers: {'X-Custom-Header': 'foobar'}\n});\n\nmyAxios.interceptors.request.use(\n  config => {\n    // perform a task before the request is sent\n    console.log(\"Request was sent\");\n    config.url += apiKey;\n\n    return config;\n  },\n  error => {\n    // handle the error\n    return Promise.reject(error);\n  }\n);\n\nconst movieUrls = {\n  popular: page => `movie/popular?page=${page}`,\n  search: query => `search/movie?query=${query}`,\n  toprated: page => `movie/top_rated?page=${page}`,\n  details: movieid =>\n    `https://api.themoviedb.org/3/movie/${movieid}?append_to_response=videos`,\n  review: movieid => `https://api.themoviedb.org/3/movie/${movieid}/reviews?`,\n  imdbLink: imdbid => `https://www.imdb.com/title/${imdbid}`\n};\n\nexport { movieUrls };\nexport default myAxios;\n","import {\n  GET_MOVIES,\n  SET_MOVIES,\n  FILTER_MOVIES,\n  GET_MOVIE_DETAILS,\n  GET_MOVIE_REVIEWS\n} from \"../actionTypes\";\n\nexport default (state, action) => {\n  switch (action.type) {\n    case GET_MOVIES:\n      return {\n        ...state,\n        movies: state.movies.concat(action.payload),\n        originalMovies: state.movies.concat(action.payload),\n        currentPage: action.currentPage\n      };\n    case SET_MOVIES:\n      return {\n        ...state,\n        movies: action.payload,\n        originalMovies: action.payload,\n        currentPage: 1\n      };\n    case FILTER_MOVIES:\n      return {\n        ...state,\n        movies: action.payload\n      };\n    case GET_MOVIE_DETAILS:\n      return {\n        ...state,\n        movieDetails: action.payload\n      };\n    case GET_MOVIE_REVIEWS:\n      return {\n        ...state,\n        movieReviews: action.payload\n      };\n    default:\n      return state;\n  }\n};\n","export const GET_MOVIES = 'GET_MOVIES';\nexport const SET_MOVIES = 'SET_MOVIES';\nexport const FILTER_MOVIES = 'FILTER_MOVIES';\nexport const GET_MOVIE_DETAILS = 'GET_MOVIE_DETAILS';\nexport const GET_MOVIE_REVIEWS = 'GET_MOVIE_REVIEWS';\n\nexport const SET_USER = 'SET_USER';","import React, { useReducer } from \"react\";\nimport _ from \"lodash\";\nimport axios, { movieUrls } from \"../../axios\";\nimport { MovieContext } from \"../context\";\nimport MovieReducer from \"./movieReducer\";\nimport {\n  GET_MOVIES,\n  SET_MOVIES,\n  FILTER_MOVIES,\n  GET_MOVIE_DETAILS,\n  GET_MOVIE_REVIEWS\n} from \"../actionTypes\";\n\nconst MovieState = props => {\n  const initialState = {\n    movies: [],\n    originalMovies: [],\n    movieDetails: {\n      currentPage: 1,\n      movie: {},\n      videos: [],\n      tags: {},\n      extraInfo: []\n    },\n    movieReviews: []\n  };\n\n  const [state, dispatch] = useReducer(MovieReducer, initialState);\n\n  const getMovies = async page => {\n    if (page <= 0) {\n      return;\n    }\n    const res = await axios.get(movieUrls.popular(page));\n    console.log(\"got movies: \", res.data);\n    dispatch({\n      type: GET_MOVIES,\n      payload: res.data.results,\n      currentPage: res.data.page\n    });\n  };\n\n  const searchMovie = async searchText => {\n    if (!searchText) {\n      return;\n    }\n\n    const res = await axios.get(movieUrls.search(searchText));\n    console.log(\"got movies from search: \", res.data);\n    dispatch({\n      type: SET_MOVIES,\n      payload: res.data.results,\n      currentPage: res.data.page\n    });\n  };\n\n  const filterMovies = filterText => {\n    dispatch({\n      type: FILTER_MOVIES,\n      payload: state.originalMovies.filter(m =>\n        m.title.toLowerCase().includes(filterText.toLowerCase())\n      )\n    });\n  };\n\n  const getMovieDetails = async movieId => {\n    const response = await axios.get(movieUrls.details(movieId));\n\n    const movie = response.data;\n    const videos = _.filter(movie.videos.results, {\n      site: \"YouTube\",\n      type: \"Trailer\"\n    });\n\n    const country = _.chain(movie.production_countries)\n      .map(\"name\")\n      .join(\", \")\n      .value();\n\n    const boxOffice =\n      movie.budget / 1000000 + \"M/\" + movie.revenue / 1000000 + \"M\";\n\n    const tags = {\n      TagLine: movie.tagline,\n      Released: movie.release_date,\n      Runtime: movie.runtime + \" min\",\n      Genres: _.chain(movie.genres)\n        .map(\"name\")\n        .join(\", \")\n        .value()\n    };\n\n    const extraInfo = [\n      { heading: \"Country\", subheading: country, isLink: false },\n      { heading: \"Budget / Revenue\", subheading: boxOffice, isLink: false },\n      {\n        heading: movieUrls.imdbLink(movie.imdb_id),\n        subheading: \"\",\n        isLink: true\n      }\n    ];\n\n    console.log(movie);\n    dispatch({\n      type: GET_MOVIE_DETAILS,\n      payload: { movie, videos, tags, extraInfo }\n    });\n  };\n\n  const getMovieReviews = async movieId => {\n    const response = await axios.get(movieUrls.review(movieId));\n    const reviews = response.data.results;\n\n    console.log(reviews);\n    dispatch({ type: GET_MOVIE_REVIEWS, payload: reviews });\n  };\n\n  const getMoviesTopRated = async () => {\n    const movieAxios = [1, 2, 3, 4, 5].map(num =>\n      axios.get(movieUrls.toprated(num))\n    );\n    const [r1, r2, r3, r4, r5] = await Promise.all(movieAxios);\n\n    const moviesToprated = _.chain([r1, r2, r3, r4, r5])\n      .flatMap(\"data.results\")\n      .map(movie => {\n        movie.release_year = movie.release_date.substr(0, 4);\n        return movie;\n      })\n      .value();\n\n    return moviesToprated;\n  };\n\n  return (\n    <MovieContext.Provider\n      value={{\n        currentPage: state.currentPage,\n        movies: state.movies,\n        movieDetails: state.movieDetails,\n        movieReviews: state.movieReviews,\n        getMovies,\n        searchMovie,\n        filterMovies,\n        getMovieDetails,\n        getMovieReviews,\n        getMoviesTopRated\n      }}\n    >\n      {props.children}\n    </MovieContext.Provider>\n  );\n};\n\nexport default MovieState;\n","import {\n  SET_USER\n} from \"../actionTypes\";\n\nexport default (state, action) => {\n  switch (action.type) {\n    case SET_USER:\n      return {\n        ...state,\n        email: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n","import React, { useReducer } from \"react\";\nimport firebase from \"firebase/app\";\nimport { AuthContext } from \"../context\";\nimport AuthReducer from \"./authReducer\";\nimport { SET_USER } from \"../actionTypes\";\n\nconst AuthState = props => {\n  const { email } = firebase.auth().currentUser || {};\n  const initialState = {\n    email: email\n  };\n\n  const [state, dispatch] = useReducer(AuthReducer, initialState);\n\n  const setUser = email => {\n    dispatch({ type: SET_USER, payload: email });\n  };\n\n  const signup = user => {\n    return firebase\n      .auth()\n      .createUserWithEmailAndPassword(user.email, user.password)\n      .then(data => {\n        setUser(user.email);\n        console.log(\"data: \" + data);\n      })\n      .catch(err => {\n        console.log(err.message);\n      });\n  };\n\n  const login = user => {\n    return firebase\n      .auth()\n      .signInWithEmailAndPassword(user.email, user.password)\n      .then(data => {\n        console.log(\"Log in Form submitted!\", data);\n        setUser(user.email);\n        // this.$router.replace({ name: \"home\" });\n      })\n      .catch(err => {\n        console.log(err.message);\n      });\n  };\n\n  const logout = () => {\n    return firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        setUser(\"\");\n      });\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        email: state.email,\n        signup,\n        login,\n        setUser,\n        logout\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthState;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { auth } from \"./firebase\";\nimport MovieState from \"./context/movie/movieState\";\nimport AuthState from \"./context/auth/authState\";\n\nlet app;\nauth.onAuthStateChanged(user => {\n  if (!app) {\n    const app = (\n      <AuthState>\n        <MovieState>\n          <BrowserRouter>\n            <App />\n          </BrowserRouter>\n        </MovieState>\n      </AuthState>\n    );\n    ReactDOM.render(app, document.getElementById(\"root\"));\n  }\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}